@model WebApplication2.ViewModel.DeviceEditViewModel
@using GridMvc.Html
@{
    ViewBag.Title = "Device Details";
}

<link href="~/Content/SearchBar.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<div class="container mt-5">
    <h2 class="mb-4">View Device</h2>

    <div class="card">
        <div class="card-header">
            <h5>Device Details</h5>
        </div>
        <div class="card-body">
            <div class="form-group row">
                @Html.LabelFor(model => model.Device.TagNumber, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.Device.TagNumber, new { @class = "form-control-plaintext" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Device.Category, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.Device.Category, new { @class = "form-control-plaintext" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Device.Status, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.Device.Status, new { @class = "form-control-plaintext" })
                </div>
            </div>

            <div id="StaffInfo" style="@(Model.Device.Status != WebApplication2.Models.StatusOption.IsStored ? "display: none;" : "")" class="mt-4">
                <h5 class="mb-3 text-white bg-dark p-2 rounded">Staff Information</h5>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Device.StaffId, htmlAttributes: new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.Device.StaffId, new { @class = "form-control-plaintext" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Device.StaffName, htmlAttributes: new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.Device.StaffName, new { @class = "form-control-plaintext" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Device.Department, htmlAttributes: new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.Device.Department, new { @class = "form-control-plaintext" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Device.Note, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.Device.Note, new { @class = "form-control-plaintext" })
                </div>
            </div>
        </div>
    </div>

    <hr />
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Devices List</h5>
                </div>
                <div class="card-body">
                    <table class="table">
                        @Html.Grid(Model.StaffChanges).Named("UserGrid").Columns(c =>
                        {
                            c.Add(x => x.DeviceId).Titled("Device ID").Sortable(true);
                            c.Add(x => x.StaffId).Titled("Staff Id").Sortable(true);
                            c.Add(x => x.StaffName).Titled("Staff Name").Sortable(true);
                            c.Add(x => x.Department).Titled("Department").Sortable(true).Filterable(true);
                            c.Add(x => x.ChangeNote).Titled("Note").Sortable(true);
                            c.Add(x => x.ChangedBy).Titled("Changed By").Sortable(true);
                            c.Add()
                                .Titled("Date Time")
                                .Filterable(true)
                                .Sortable(true)
                                .RenderValueAs(o => o.DateTime.ToString("d MMM, yyyy h:mm tt"));
                        }).WithPaging(15).EmptyText("No data found")
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
